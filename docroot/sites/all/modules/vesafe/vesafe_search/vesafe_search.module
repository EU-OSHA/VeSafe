<?php
/**
 * @file
 * Code for the vesafe_search feature.
 */

include_once 'vesafe_search.features.inc';

function vesafe_search_block_info() {
  return array(
    'search_vesafe' => array(
      'info' => t('VeSafe search box'),
      'cache' => DRUPAL_NO_CACHE,
      'weight' => 10,
      'status' => 1,
      'region' => 'header_block',
      'visibility' => BLOCK_VISIBILITY_NOTLISTED,
      'pages' => '',
    ),
    'search_vesafe_sidebar' => array(
      'info' => t('VeSafe search box (sidebar)'),
      'cache' => DRUPAL_NO_CACHE,
      'weight' => 10,
      'status' => 1,
      'region' => 'sidebar_first',
      'visibility' => BLOCK_VISIBILITY_LISTED,
      'pages' => 'search',
    ),
  );
}

/**
 * Implements hook_block_view().
 */
function vesafe_search_block_view($delta = '') {
  $block = array();
  switch($delta) {
    case 'search_vesafe':
    case 'search_vesafe_sidebar':
      $form = drupal_get_form('vesafe_search_form');
      unset($form['form_id']);
      unset($form['form_build_id']);
      $block['content'] = $form;
      break;
  }
  return $block;
}

function _vesafe_get_search_query($parameter = 'search_api_views_fulltext') {
  return !empty($_GET[$parameter]) ? check_plain($_GET[$parameter]) : '';
}

function vesafe_search_form($form, $form_state) {
  $form = [
    '#id' => 'search-form',
    '#action' => 'search',
    '#method' => 'get',
    '#always_process' => true,
    '#token' => false,
    '#attributes' => ['class' => ['navbar-form']],
    'search_api_views_fulltext' => [
      '#type' => 'textfield',
      '#default_value' => _vesafe_get_search_query(),
      '#size' => 25,
      '#maxlength' => 255,
    ],
    'actions' => [
      'submit' => [
        '#type' => 'submit',
        '#name' => '',
        '#value' => t('<span class="glyphicon glyphicon-search"></span>'),
        '#attributes' => ['class' => ['btn-default']],
      ],
    ],
  ];
  if (!empty($_GET['f'])) {
    // Preserve facet values
    if (is_array($_GET['f'])) {
      foreach ($_GET['f'] as $key => $value) {
        $form["f[{$key}]"] = [
          '#type' => 'hidden',
          '#value' => $value,
        ];
      }
    }
    else {
      $form['f'] = [
        '#type' => 'hidden',
        '#value' => $_GET['f'],
      ];
    }
  }
  return $form;
}

/**
 * Implements hook_form_alter().
 */
function vesafe_search_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'views_exposed_form' && $form['#id'] == 'views-exposed-form-search-page') {
    hide($form['search_api_views_fulltext']);
    hide($form['submit']);
  }
}

/**
 * Implements hook_views_pre_view().
 */
function vesafe_search_views_pre_view(&$view, &$display_id, &$args) {
  /** @var view $view */
  switch ($view->name) {
    case 'search':
      // Header text area: "Results for ..."
      // I don't know how to set it's weight so i will put the text on the first
      // position using hook_views_pre_render
      $item = array(
        'label' => '',
        'content' => sprintf('<div class="results-for">%s: <b>"%s"</b></div>',
          t('Results for'),
          _vesafe_get_search_query()
        ),
        'format' => 'full_html',
        'empty' => 1,
      );
      $view->add_item($display_id, 'header', 'views', 'area', $item, 'results_for_text');
      break;
  }
}

/**
 * Implements hook_views_pre_render().
 */
function vesafe_search_views_pre_render(&$view) {
  switch ($view->name) {
    case 'search':
      // Display the "Results for ..." text at the top of the header
      if (!empty($view->header['results_for_text'])) {
        $resultsFor = $view->header['results_for_text'];
        unset($view->header['results_for_text']);
        $view->header = array_merge(['results_for_text' => $resultsFor], $view->header);
      }
      break;
  }
}
